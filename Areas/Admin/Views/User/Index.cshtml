@model MyWebApp.ViewModels.ListViewModel

@{
    int index = (Model.CurrentPage - 1) * 10 + 1;
}

<h2 class = "text-primary mb-4">Quản lý người dùng</h2>

<div class = "d-flex justify-content-between align-items-center mb-3">
    <a class = "btn btn-primary" asp-controller = "User" asp-action = "AddUser">
        <i class = "bi bi-person-plus"></i> Thêm người dùng
    </a>
    <!-- Bộ lọc Role -->
    <form asp-action = "Index" method = "get" class = "d-flex">
        <select name = "role" class = "form-select me-2" style = "min-width: 200px;">
            <option value = "">-- Tất cả vai trò --</option>
            @foreach (var role in ViewBag.Roles as List<string>)
            {
                <option value = "@role" selected = "@(role == Context.Request.Query["role"] ? "selected" : null)">
                    @role
                </option>
            }
        </select>
        <button type = "submit" class = "btn btn-secondary">Lọc</button>
    </form>

    <span class = "text-muted fst-italic">
        Trang @Model.CurrentPage / @Model.TotalPages
    </span>
    <span class = "text-muted fst-italic">Trang @Model.CurrentPage / @Model.TotalPages</span>
</div>

<table class = "table table-hover table-bordered shadow-sm rounded">
    <thead class = "table-dark">
    <tr>
        <th>#</th>
        <th>Tên đăng nhập</th>
        <th>Email</th>
        <th>Điện thoại</th>
        <th>Ngày tạo</th>
        <th>Trạng thái</th>
        <th>Quyền</th>
        <th>Hành động</th>
    </tr>
    </thead>
    <tbody>
    @if (Model.Users == null || !Model.Users.Any())
    {
        <tr>
            <td colspan = "8" class = "text-center text-muted">Không có người dùng nào.</td>
        </tr>
    }
    else
    {
        foreach (var user in Model.Users)
        {
            <tr>
                <td>@(index++)</td>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>@user.PhoneNumber</td>
                <td>@user.CreatedDate.ToString("dd/MM/yyyy")</td>
                <td id = "status-@user.Id">
                    <span class = "badge bg-secondary">Offline</span>
                </td>
                <td>
                    <span class = "badge bg-info text-dark">@user.Role</span>
                </td>
                <td>
                    <a class = "btn btn-sm btn-info" asp-action = "Detail" asp-route-id = "@user.Id">Chi tiết</a>
                    <a class = "btn btn-sm btn-warning" asp-action = "Lock" asp-route-id = "@user.Id">Khóa</a>
                    <a class = "btn btn-sm btn-warning" asp-action = "Edit" asp-route-id = "@user.Id">Sửa</a>
                    <a
                        class = "btn btn-sm btn-danger" asp-action = "Delete" asp-route-id = "@user.Id"
                        onclick = "return confirm('Bạn có chắc muốn xóa người dùng này?')"
                    >Xóa</a>
                </td>
            </tr>
        }
    }
    </tbody>
</table>
@await Html.PartialAsync("_Paganite", Model)

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/presenceHub", { withCredentials: true }) // bắt buộc gửi cookie auth
            .withAutomaticReconnect()
            .build();

    // Nhận danh sách online khi connect
    connection.on("CurrentOnlineUsers", function(userIds){
        document.querySelectorAll("[id^='status-']").forEach(td => {
            td.innerHTML = '<span class="badge bg-secondary">Offline</span>';
        });

        userIds.forEach(id => {
            const badge = document.getElementById("status-" + id);
            if(badge) badge.innerHTML = '<span class="badge bg-success">Online</span>';
        });
    });

    // Cập nhật khi có user online mới
    connection.on("UserOnline", function(userId){
        const badge = document.getElementById("status-" + userId);
        if(badge) badge.innerHTML = '<span class="badge bg-success">Online</span>';
    });

    // Cập nhật khi user offline
    connection.on("UserOffline", function(userId){
        const badge = document.getElementById("status-" + userId);
        if(badge) badge.innerHTML = '<span class="badge bg-secondary">Offline</span>';
    });

    connection.start().catch(err => console.error(err.toString()));
</script>
}

