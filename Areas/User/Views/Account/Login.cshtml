@model MyWebApp.ViewModels.LoginViewModel
@{
    ViewData["Title"] = "Đăng nhập";
    ViewData["col-12"] = true;
}

<link rel = "stylesheet" href = "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"/>
<link rel = "stylesheet" href = "~/css/User/Login.css" asp-append-version = "true"/>


<div class = "login-bg">
    <div class = "login-card">
        <i class = "fa-solid fa-right-to-bracket login-icon"></i>
        <div class = "login-title">Đăng nhập</div>

        <form asp-controller = "Account" asp-action = "Login" method = "post" autocomplete = "off">
            <div asp-validation-summary = "ModelOnly" class = "text-danger mb-3"></div>

            <div class = "mb-3">
                <label asp-for = "UserName" class = "form-label">Tên đăng nhập</label>
                <div class = "input-group">
                    <span class = "input-group-text"><i class = "fa-regular fa-user"></i></span>
                    <input asp-for = "UserName" class = "form-control" placeholder = "Tên đăng nhập"/>
                </div>
                <span asp-validation-for = "UserName" class = "text-danger"></span>
            </div>

            <div class = "mb-3">
                <label asp-for = "Password" class = "form-label">Mật khẩu</label>
                <div class = "input-group">
                    <span class = "input-group-text"><i class = "fa-solid fa-lock"></i></span>
                    <input asp-for = "Password" type = "password" class = "form-control" placeholder = "Mật khẩu"/>
                </div>
                <span asp-validation-for = "Password" class = "text-danger"></span>
            </div>

            <div class = "mb-3 form-check">
                <input asp-for = "RememberMe" class = "form-check-input"/>
                <label asp-for = "RememberMe" class = "form-check-label">Ghi nhớ đăng nhập</label>
            </div>


            <button type = "submit" class = "btn btn-primary w-100">
                <i class = "fa-solid fa-arrow-right-to-bracket me-2"></i> Đăng nhập
            </button>

            <div class = "mt-3 text-center">
                <a asp-action = "ForgotPassword" class = "btn btn-link">Quên mật khẩu?</a>
            </div>

            <div class = "mt-3 text-center">
                <span>Bạn chưa có tài khoản?</span>
                <a asp-controller = "Account" asp-action = "Register" class = "btn btn-link">Đăng ký ngay</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function toggleForm() {
            const loginForm = document.getElementById('login-form');

            if (loginForm.classList.contains('active')) {
                showRegister();
            } else {
                showLogin();
            }
        }

        function showLogin() {
            document.getElementById('login-form').classList.add('active');
        }

        function showRegister() {
            document.getElementById('login-form').classList.remove('active');
            document.getElementById('toggle-text').textContent = 'Chuyển sang Đăng nhập';
        }

        // Add smooth focus animations
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('focus', function () {
                this.parentElement.style.transform = 'scale(1.02)';
            });

            input.addEventListener('blur', function () {
                this.parentElement.style.transform = 'scale(1)';
            });
        });

        // Add button click effects
        document.querySelectorAll('.btn-primary').forEach(btn => {
            btn.addEventListener('click', function (e) {
                let ripple = document.createElement('div');
                ripple.style.position = 'absolute';
                ripple.style.borderRadius = '50%';
                ripple.style.background = 'rgba(255, 255, 255, 0.6)';
                ripple.style.transform = 'scale(0)';
                ripple.style.animation = 'ripple 0.6s linear';
                ripple.style.left = e.offsetX - 10 + 'px';
                ripple.style.top = e.offsetY - 10 + 'px';
                ripple.style.width = '20px';
                ripple.style.height = '20px';

                this.appendChild(ripple);

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
    </script>
}