@model MyWebApp.ViewModels.CartItemViewModel
@{
    ViewData["Title"] = "Thanh toán";
}

<div class = "container my-5">
    <div class = "row">
        <!-- Giỏ hàng -->
        <div class = "col-md-12">
            <h4>Giỏ hàng</h4>
            <table class = "table table-bordered text-center align-middle">
                <thead class = "table-dark">
                <tr>
                    <th>Hình ảnh</th>
                    <th>Sản phẩm</th>
                    <th>Đơn giá</th>
                    <th>Số lượng</th>
                    <th>Thành tiền</th>
                    <th></th>
                </tr>
                </thead>
                <tbody id = "cartBody">
                @foreach (var item in Model.CartItems)
                {
                    <tr data-id = "@item.CartItemId">
                        <td><img src = "~/img/product/@item.ImageUrl" style = "height:60px"/></td>
                        <td>@item.ProductName</td>
                        <td>@item.Price.ToString("N0") ₫</td>
                        <td>
                            <div class = "input-group justify-content-center">
                                <form asp-controller = "Cart" asp-action = "Decrease" method = "post" asp-route-id = "@item.CartItemId" class = "me-1">
                                    <button type = "submit" class = "btn btn-outline-secondary">-</button>
                                </form>

                                <input type = "text" class = "form-control text-center" readonly value = "@item.Quantity" style = "max-width: 50px;"/>

                                <form asp-controller = "Cart" asp-action = "Increase" method = "post" asp-route-id = "@item.CartItemId" class = "ms-1">
                                    <button type = "submit" class = "btn btn-outline-secondary">+</button>
                                </form>
                            </div>
                        </td>
                        <td class = "subtotal">@((item.Quantity * item.Price).ToString("N0")) ₫</td>
                        <td>
                            <button class = "btn btn-danger btn-sm btn-remove">Xóa</button>
                        </td>
                    </tr>
                }
                </tbody>
                <tfoot>
                <tr>
                    <td colspan = "4" class = "text-end fw-bold">Tổng tiền:</td>
                    <td id = "cartTotal" class = "fw-bold text-danger">@Model.TotalPrice.ToString("N0") ₫</td>
                    <td></td>
                </tr>
                <tr>
                    <td colspan = "4" class = "text-end fw-bold">Phí ship:</td>
                    <td id = "shippingFee" class = "fw-bold text-danger">0 ₫</td>
                    <td></td>
                </tr>
                <tr>
                    <td colspan = "4" class = "text-end fw-bold">Thanh toán:</td>
                    <td id = "grandTotal" class = "fw-bold text-success">@Model.TotalPrice.ToString("N0") ₫</td>
                    <td></td>
                </tr>
                </tfoot>
            </table>
        </div>

        <!-- Địa chỉ & Ship -->
        <div class = "col-md-5">
            <h4>Thông tin giao hàng</h4>
            <form id = "shippingForm">
                <div class = "mb-3">
                    <label>Thành phố</label>
                    <select id = "tinh" class = "form-select" required>
                        <option value = "">-- Chọn Tỉnh/Thành phố --</option>
                    </select>
                    <input type = "hidden" id = "City" name = "City"/>
                </div>
                <div class = "mb-3">
                    <label>Quận/Huyện</label>
                    <select id = "quan" class = "form-select" required>
                        <option value = "">-- Chọn Quận/Huyện --</option>
                    </select>
                    <input type = "hidden" id = "District" name = "District"/>
                </div>
                <button type = "submit" class = "btn btn-success w-100">Cập nhật phí ship</button>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <script src = "https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
                // Load tỉnh
                $.getJSON('https://esgoo.net/api-tinhthanh-new/1/0.htm', function (data) {
                    if (data.error === 0) {
                        $.each(data.data, function (_, val) {
                            $("#tinh").append('<option value="' + val.id + '">' + val.full_name + '</option>');
                        });
                    }
                });

                // Chọn tỉnh -> load quận
                $("#tinh").change(function () {
                    $("#City").val($("#tinh option:selected").text());
                    $("#quan").html('<option value="">-- Chọn Quận/Huyện --</option>');
                    var idtinh = $(this).val();
                    $.getJSON('https://esgoo.net/api-tinhthanh-new/2/' + idtinh + '.htm', function (data) {
                        if (data.error === 0) {
                            $.each(data.data, function (_, val) {
                                $("#quan").append('<option value="' + val.full_name + '">' + val.full_name + '</option>');
                            });
                        }
                    });
                    updateShipping();
                });

                $("#quan").change(function () {
                    $("#District").val($("#quan option:selected").text());
                    updateShipping();
                });

                $("#shippingForm").submit(function (e) {
                    e.preventDefault();
                    updateShipping();
                });

                function updateShipping() {
                    var city = $("#City").val();
                    var district = $("#District").val();
                    if (city && district) {
                        $.getJSON('/User/Cart/GetShippingFee', {city: city, district: district}, function (res) {
                            $("#shippingFee").text(res.price.toLocaleString() + ' ₫');
                            updateGrandTotal();
                        });
                    }
                }

                // Tăng số lượng
                $("#cartBody").on("click", ".btn-increase", function () {
                    var tr = $(this).closest("tr");
                    var cartItemId = tr.data("id");
                    $.post('/User/Cart/Increase', {id: cartItemId}, function () {
                        var quantityInput = tr.find(".quantity");
                        quantityInput.val(parseInt(quantityInput.val()) + 1);
                        updateSubtotal(tr);
                    });
                });

                // Xóa sản phẩm
                $("#cartBody").on("click", ".btn-remove", function () {
                    var tr = $(this).closest("tr");
                    var cartItemId = tr.data("id");
                    $.post('/User/Cart/Remove', {id: cartItemId}, function (res) {
                        if (res.success) {
                            if (res.empty) {
                                window.location.href = '/User/Cart/Index';
                            } else {
                                tr.remove();
                                updateGrandTotal(res.total);
                            }
                        }
                    });
                });

// Giảm số lượng
                $("#cartBody").on("click", ".btn-decrease", function () {
                    var tr = $(this).closest("tr");
                    var cartItemId = tr.data("id");
                    $.post('/User/Cart/Decrease', {id: cartItemId}, function (res) {
                        if (res.success) {
                            if (res.empty) {
                                window.location.href = '/User/Cart/Index';
                            } else {
                                var qty = parseInt(tr.find(".quantity").val()) - 1;
                                if (qty <= 0) {
                                    tr.remove();
                                } else {
                                    tr.find(".quantity").val(qty);
                                    updateSubtotal(tr);
                                }
                                updateGrandTotal(res.total);
                            }
                        }
                    });
                });

                // Cập nhật tổng tiền dựa vào server
                function updateGrandTotal(totalFromServer) {
                    var ship = parseInt($("#shippingFee").text().replace(/\D/g, '')) || 0;
                    $("#cartTotal").text(totalFromServer.toLocaleString() + ' ₫');
                    $("#grandTotal").text((totalFromServer + ship).toLocaleString() + ' ₫');
                }
            }
        );

    </script>
}
