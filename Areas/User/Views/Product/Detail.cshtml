@using MyWebApp.Models
@model MyWebApp.Models.Product

@{
    ViewData["Title"] = "Chi tiết sản phẩm - " + Model.Name;
    ViewData["col-12"] = true;
    // Gom tất cả ảnh: ảnh chính + ảnh phụ
    var allImages = new List<string>();
    if (!string.IsNullOrEmpty(Model.MainImage)) allImages.Add(Model.MainImage);

    if (Model.Images != null && Model.Images.Any())
    {
        allImages.AddRange(Model.Images.Select(i => i.ImageUrl));
    }
}

<link rel = "stylesheet" href = "~/css/User/ProductDetail.css"/>

<div class = "container my-5">
    @Html.AntiForgeryToken()
    <div class = "row g-4" style = "margin-bottom: 2rem;">
        <!-- Hình ảnh sản phẩm -->
        <div class = "col-lg-5">
            <div class = "product-images-container animate-fade-in">
                <!-- Carousel chính -->
                <div id = "productCarousel" class = "carousel slide mb-3" data-bs-ride = "carousel">
                    <div class = "carousel-inner">
                        @for (int i = 0; i < allImages.Count; i++)
                        {
                            <div class = "carousel-item @(i == 0 ? "active" : "")">
                                <img
                                    src = "@(allImages[i].StartsWith("/img/product/") ? allImages[i] : Url.Content("~/img/product/" + allImages[i]))"
                                    class = "d-block w-100" alt = "@Model.Name"
                                />
                            </div>
                        }
                    </div>
                    <button class = "carousel-control-prev" type = "button" data-bs-target = "#productCarousel" data-bs-slide = "prev">
                        <span class = "carousel-control-prev-icon" aria-hidden = "true"></span>
                        <span class = "visually-hidden">Previous</span>
                    </button>
                    <button class = "carousel-control-next" type = "button" data-bs-target = "#productCarousel" data-bs-slide = "next">
                        <span class = "carousel-control-next-icon" aria-hidden = "true"></span>
                        <span class = "visually-hidden">Next</span>
                    </button>
                </div>

                <!-- Thumbnails -->
                <div class = "thumbnails-container">
                    @for (int i = 0; i < allImages.Count; i++)
                    {
                        <img
                            src = "@(allImages[i].StartsWith("/img/product/") ? allImages[i] : Url.Content("~/img/product/" + allImages[i]))"
                            class = "thumbnail-img"
                            data-index = "@i"
                            alt = "Thumbnail @(i + 1)"
                        />
                    }
                </div>
            </div>
        </div>

        <!-- Thông tin sản phẩm -->
        <div class = "col-lg-4">
            <div class = "product-info-container animate-fade-in">
                <h1 class = "product-title">@Model.Name</h1>

                <div class = "price-section">
                    @if (@Model.DiscountPercent is > 0)
                    {
                        <p class = "text-decoration-line-through">@Model.Price.ToString("N0") VND</p>
                        <p>
                            <strong><span class = "text-danger">@Model.DiscountPrice?.ToString("N0") VND</span></strong>
                            (<span>-@Model.DiscountPercent %</span>)
                        </p>
                    }
                    else
                    {
                        <p>
                            <strong><span class = "text-danger">@Model.Price.ToString("N0") VND</span></strong>
                        </p>
                    }
                    <small class = "text-muted">Đã bao gồm VAT</small>
                </div>

                <div class = "product-details">
                    <div class = "info-item">
                        <div class = "info-icon">
                            <i class = "fa fa-boxes"></i>
                        </div>
                        <span class = "info-label">Số lượng còn:</span>
                        <span class = "info-value">@Model.Quantity</span>
                    </div>

                    <div class = "info-item">
                        <div class = "info-icon">
                            <i class = "fa fa-calendar-alt"></i>
                        </div>
                        <span class = "info-label">Ngày tạo:</span>
                        <span class = "info-value">@Model.CreatedAt.ToString("dd/MM/yyyy")</span>
                    </div>

                    <div class = "info-item">
                        <div class = "info-icon">
                            <i class = "fa fa-list-alt"></i>
                        </div>
                        <span class = "info-label">Danh mục:</span>
                        <span class = "badge-custom badge-category">@Model.Category?.Name</span>
                    </div>

                    <div class = "info-item">
                        <div class = "info-icon">
                            <i class = "fa fa-copyright"></i>
                        </div>
                        <span class = "info-label">Thương hiệu:</span>
                        <span class = "badge-custom badge-brand">@Model.Brand?.Name</span>
                    </div>
                </div>

                @if (Model.Quantity > 0)
                {
                    <button type = "button" class = "btn btn-add-to-cart w-100" data-id = "@Model.Id">
                        <i class = "fa fa-cart-plus me-2"></i> Thêm vào giỏ hàng
                    </button>
                }
                else
                {
                    <button type = "button" class = "btn btn-out-of-stock w-100" disabled>
                        <i class = "fa fa-ban me-2"></i> Hết hàng
                    </button>
                }
            </div>
        </div>
        <div class = "col-lg-3">
            <div class = "content-section animate-fade-in">
                <h5 class = "text-dark mb-3"><i class = "fa fa-gift me-2 text-danger"></i>Khuyến mãi tặng quà</h5>

                @if (ViewBag.ActivePromotions != null && ((List<GiftPromotion>)ViewBag.ActivePromotions).Any())
                {
                    <div class = "list-group">
                        @foreach (var promo in (List<GiftPromotion>)ViewBag.ActivePromotions)
                        {
                            <div class = "promo-card">
                                <div class = "promo-header">
                                    <div class = "promo-badge">Hot Deal</div>
                                </div>

                                <div class = "promo-details">
                                    <div class = "promo-offer">
                                        <div class = "offer-section buy-section">
                                            <i class = "fas fa-shopping-cart"></i>
                                            <span>Mua <span class = "quantity">@promo.QuantityRequired</span></span>
                                            @if (promo.RequiredProduct != null)
                                            {
                                                <span>Sản phẩm</span>
                                            }
                                        </div>

                                        <div class = "arrow-icon">
                                            <i class = "fas fa-arrow-right"></i>
                                        </div>

                                        <div class = "offer-section gift-section">
                                            <i class = "fas fa-gift"></i>
                                            <span>Tặng <span class = "quantity">@promo.QuantityGift</span></span>
                                            @if (promo.GiftProduct != null)
                                            {
                                                <span>@promo.GiftProduct.Name</span>
                                            }
                                        </div>
                                    </div>
                                </div>

                                <div class = "promo-footer">
                                    <div class = "date-range">
                                        <i class = "fas fa-calendar-alt"></i>
                                        <span>@promo.StartDate.ToString("dd/MM/yyyy") - @promo.EndDate.ToString("dd/MM/yyyy")</span>
                                    </div>
                                    <div class = "status-indicator">
                                        <i class = "fas fa-check-circle"></i>
                                        Đang áp dụng
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class = "alert alert-info p-2">
                        <i class = "fa fa-info-circle me-2"></i>Không có khuyến mãi hiện tại.
                    </div>
                }
            </div>

        </div>
    </div>

    <!-- Thông số kỹ thuật sản phẩm -->
    @if (Model.Specifications != null && Model.Specifications.Any())
    {
        <div class = "content-section animate-fade-in">
            <div class = "section-header">
                <div class = "section-icon">
                    <i class = "fa fa-cogs"></i>
                </div>
                <h3 class = "section-title">Thông số kỹ thuật</h3>
            </div>
            <table class = "table table-bordered table-custom">
                <tbody>
                @foreach (var spec in Model.Specifications
                              .OrderBy(s => s.SpecName?.Name ?? s.Key)) // Sắp xếp A-Z
                {
                    <tr>
                        <td>@(spec.SpecName?.Name ?? spec.Key)</td>
                        <td>
                            <div
                                class = "spec-value" style = "white-space: pre-line;word-break: break-word;overflow-wrap: anywhere;"
                            >
                                @Html.Raw(spec.Value)
                            </div>
                        </td>
                        @if (spec.WarrantyMonths is null or 0)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td>@spec.WarrantyMonths tháng</td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    <!-- Mô tả sản phẩm -->
    <div class = "content-section animate-fade-in">
        <div class = "section-header">
            <div class = "section-icon">
                <i class = "fa fa-file-alt"></i>
            </div>
            <h3 class = "section-title">Mô tả sản phẩm</h3>
        </div>
        <div class = "product-description">
            @Html.Raw(Model.Description)
        </div>
    </div>


    <!-- Đánh giá & Bình luận -->
    <div class = "review-section animate-fade-in">
        <div class = "card">
            <div class = "card-header">
                <i class = "fa fa-star me-2"></i> Đánh giá & Bình luận
            </div>
            <div class = "card-body">
                <form method = "post" asp-action = "AddComment" asp-controller = "Product">
                    <input type = "hidden" name = "ProductId" value = "@Model.Id"/>

                    <!-- Rating -->
                    <div class = "mb-3">
                        <label for = "Rating" class = "form-label fw-semibold">Đánh giá sao:</label>
                        <select class = "form-select w-auto d-inline-block" name = "Rating" id = "Rating">
                            <option value = "5">⭐⭐⭐⭐⭐</option>
                            <option value = "4">⭐⭐⭐⭐</option>
                            <option value = "3">⭐⭐⭐</option>
                            <option value = "2">⭐⭐</option>
                            <option value = "1">⭐</option>
                        </select>
                    </div>

                    @if (User.Identity?.IsAuthenticated ?? false)
                    {
                        <div class = "mb-3">
                            <label for = "Content" class = "form-label fw-semibold">Nội dung bình luận:</label>
                            <textarea class = "form-control" name = "Content" id = "Content" rows = "4" placeholder = "Chia sẻ trải nghiệm của bạn về sản phẩm này..." required></textarea>
                        </div>

                        <button type = "submit" class = "btn btn-success">
                            <i class = "fa fa-paper-plane me-2"></i> Gửi bình luận
                        </button>
                    }
                    else
                    {
                        <a asp-area = "User" asp-controller = "Account" asp-action = "Login" class = "btn btn-primary">
                            <i class = "fa fa-sign-in-alt me-2"></i>Đăng nhập để bình luận
                        </a>
                    }
                </form>
            </div>
        </div>

        <!-- Danh sách bình luận -->
        <div class = "mt-4">
            <h5 class = "text-dark mb-3">
                <i class = "fa fa-comments me-2 text-secondary"></i> Bình luận gần đây
            </h5>
            <div class = "comments-list">
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    @foreach (var comment in Model.Comments.Where(c => c.ParentCommentId == null).OrderByDescending(c => c.CreatedAt))
                    {
                        @await Html.PartialAsync("_CommentPartial", comment)
                    }
                }
                else
                {
                    <div class = "alert alert-info">
                        <i class = "fa fa-info-circle me-2"></i>Chưa có bình luận nào.
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Sản phẩm liên quan -->
    @if (ViewBag.RelatedProducts != null && ((List<Product>)ViewBag.RelatedProducts).Any())
    {
        <div class = "content-section animate-fade-in">
            <div class = "section-header">
                <div class = "section-icon">
                    <i class = "fa fa-link"></i>
                </div>
                <h3 class = "section-title">Sản phẩm liên quan</h3>
            </div>
            <div class = "row g-4">
                @foreach (var rp in (List<Product>)ViewBag.RelatedProducts)
                {
                    <div class = "col-lg-3 col-md-6">
                        <div class = "card product-card">
                            <div class = "position-relative overflow-hidden">
                                @{
                                    var relatedImg = rp.MainImage ?? rp.Images.FirstOrDefault()?.ImageUrl;
                                }
                                @if (!string.IsNullOrEmpty(relatedImg))
                                {
                                    <img
                                        src = "@(relatedImg.StartsWith("/img/product/") ? relatedImg : Url.Content("~/img/product/" + relatedImg))"
                                        class = "product-img" alt = "@rp.Name"
                                    />
                                }
                            </div>
                            <div class = "card-body text-center d-flex flex-column">
                                <h6 class = "card-title" title = "@rp.Name">@rp.Name</h6>
                                <p class = "text-danger mb-2">@rp.Price.ToString("N0") ₫</p>
                                <div class = "mt-auto">
                                    <a asp-action = "Detail" asp-route-categorySlug = "@rp.Category?.Slug" asp-route-brandSlug = "@rp.Brand?.Slug" asp-route-productSlug = "@rp.Slug" class = "btn btn-outline-primary btn-sm px-3 rounded-pill">
                                        <i class = "fa fa-eye me-1"></i> Xem chi tiết
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // ===== Animation fade-in =====
            const animatedElements = document.querySelectorAll('.animate-fade-in');
            animatedElements.forEach((el, index) => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(30px)';
                el.style.transition = 'all 0.6s ease-out';
            });
            const observer = new IntersectionObserver(entries => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, {threshold: 0.1, rootMargin: '0px 0px -50px 0px'});
            animatedElements.forEach(el => observer.observe(el));

            // ===== Carousel & thumbnails =====
            const carousel = new bootstrap.Carousel(document.getElementById('productCarousel'), {
                interval: false,
                ride: false
            });
            document.querySelectorAll(".thumbnail-img").forEach((img, idx) => {
                img.addEventListener("click", function () {
                    document.querySelectorAll(".thumbnail-img").forEach(thumb => {
                        thumb.style.borderColor = 'transparent';
                        thumb.style.transform = 'scale(1)';
                    });
                    this.style.borderColor = 'var(--primary-color)';
                    this.style.transform = 'scale(1.05)';
                    carousel.to(idx);
                });
                if (idx === 0) {
                    img.style.borderColor = 'var(--primary-color)';
                    img.style.transform = 'scale(1.05)';
                }
            });
            document.getElementById('productCarousel').addEventListener('slide.bs.carousel', function (e) {
                document.querySelectorAll(".thumbnail-img").forEach((thumb, idx) => {
                    if (idx === e.to) {
                        thumb.style.borderColor = 'var(--primary-color)';
                        thumb.style.transform = 'scale(1.05)';
                    } else {
                        thumb.style.borderColor = 'transparent';
                        thumb.style.transform = 'scale(1)';
                    }
                });
            });

            // ===== Image zoom =====
            document.querySelectorAll('#productCarousel .carousel-item img').forEach(img => {
                img.addEventListener('click', function () {
                    const modal = document.createElement('div');
                    modal.style.cssText = "position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.9);display:flex;align-items:center;justify-content:center;z-index:9999;cursor:zoom-out;";
                    const zoomedImg = document.createElement('img');
                    zoomedImg.src = this.src;
                    zoomedImg.style.cssText = "max-width:90%;max-height:90%;object-fit:contain;border-radius:8px;";
                    modal.appendChild(zoomedImg);
                    document.body.appendChild(modal);
                    modal.addEventListener('click', () => document.body.removeChild(modal));
                    document.addEventListener('keydown', function esc(e) {
                        if (e.key === 'Escape') {
                            document.body.removeChild(modal);
                            document.removeEventListener('keydown', esc);
                        }
                    });
                });
            });

            // ===== Add to cart =====
            const addToCartBtn = document.querySelector(".btn-add-to-cart");
            addToCartBtn?.addEventListener("click", function (e) {
                e.preventDefault();
                const originalText = this.innerHTML;
                this.innerHTML = '<i class="fa fa-spinner fa-spin me-2"></i>Đang thêm...';
                this.disabled = true;
                const productId = this.dataset.id;
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                const params = new URLSearchParams();
                params.append("Id", productId);
                params.append("__RequestVerificationToken", token);
                fetch('/User/Cart/Add', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                    body: params
                })
                    .then(res => res.json())
                    .then(data => {
                        showToast(data.success ? data.message || "Thêm vào giỏ hàng thành công" : "Thêm không thành công", data.success ? "success" : "danger");
                        const cartCount = document.querySelector("#cartCount");
                        if (cartCount) cartCount.textContent = data.cartCount;
                    })
                    .catch(() => showToast("Có lỗi xảy ra, vui lòng thử lại", "danger"))
                    .finally(() => {
                        this.innerHTML = originalText;
                        this.disabled = false;
                    });

                function showToast(message, type) {
                    const container = document.getElementById("toast-container") || createToastContainer();
                    const toast = document.createElement("div");
                    toast.className = `toast align-items-center text-white bg-${type} border-0 show`;
                    toast.setAttribute("role", "alert");
                    toast.innerHTML = `<div class="d-flex"><div class="toast-body">${message}</div><button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button></div>`;
                    container.appendChild(toast);
                    setTimeout(() => {
                        if (toast.parentNode) toast.remove();
                    }, 5000);
                    toast.querySelector('.btn-close').addEventListener('click', () => toast.remove());
                }

                function createToastContainer() {
                    const c = document.createElement("div");
                    c.id = "toast-container";
                    c.style.cssText = "position:fixed;top:1rem;right:1rem;z-index:1055";
                    document.body.appendChild(c);
                    return c;
                }
            });

            // ===== Reply toggle =====
            document.querySelectorAll(".reply-btn").forEach(btn => {
                btn.addEventListener("click", () => {
                    const id = btn.dataset.id;
                    const form = document.getElementById(`reply-form-${id}`);
                    form?.classList.toggle("d-none");
                });
            });
            document.querySelectorAll(".toggle-replies-btn").forEach(btn => {
                btn.addEventListener("click", () => {
                    const id = btn.dataset.id;
                    const container = document.getElementById(`replies-${id}`);
                    container?.classList.toggle("d-none");
                });
            });


        });
    </script>
}
