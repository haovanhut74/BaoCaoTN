@model MyWebApp.ViewModels.ProductFilterViewModel

@{
    ViewData["Title"] = "Danh sách sản phẩm";
    ViewData["col-12"] = true;
}
<link rel = "stylesheet" href = "~/css/User/ProductIndex.css"/>
<!-- AntiForgery hidden form -->
<form id = "antiForgeryForm" style = "display:none;">
    @Html.AntiForgeryToken()
</form>

<div class = "main-container">
    <form method = "get" asp-action = "Index">
        <div class = "row">
            <div class = "col-md-12">
                <div id = "product-list-container">
                    @await Html.PartialAsync("_ProductListPartial", Model.Products)
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Toast Container -->
<div id = "toast-container" style = "position: fixed; top: 1rem; right: 1rem; z-index: 1055;"></div>

@section Scripts {
    <script src = "https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {

            // ------------------------------
            // Hàm hiển thị toast
            // ------------------------------
            function showToast(message, type) {
                const toastContainer = document.getElementById("toast-container");
                const toast = document.createElement("div");
                toast.className = `toast align-items-center text-white bg-${type} border-0 show`;
                toast.setAttribute("role", "alert");
                toast.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">${message}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        `;
                toastContainer.appendChild(toast);
                setTimeout(() => toast.remove(), 3000);
            }

            // ------------------------------
            // Hàm load danh sách sản phẩm bằng Ajax
            // ------------------------------
            function loadProducts() {
                let form = $('#filterForm');
                let url = '@Url.Action("FilterPartial", "Product", new { area = "User" })';
                $.ajax({
                    url: url,
                    type: 'GET',
                    data: form.serialize(),
                    success: function (html) {
                        $('#product-list-container').html(html);
                    },
                    error: function () {
                        showToast("⚠️ Lọc sản phẩm thất bại!", "danger");
                    }
                });
            }

            // ------------------------------
            // Event lọc giá (input) và checkbox lọc
            // ------------------------------
            const minInput = $('#minPriceInput');
            const maxInput = $('#maxPriceInput');

            function updatePriceRange() {
                let min = parseInt(minInput.val()) || 0;
                let max = parseInt(maxInput.val()) || 0;

                if (min > max) [min, max] = [min, max]; // hoán đổi nếu nhập nhầm
                $('#priceRange').text(min.toLocaleString() + " - " + max.toLocaleString());

                loadProducts();
            }

            minInput.on('input', updatePriceRange);
            maxInput.on('input', updatePriceRange);

            $('#filterForm input[type="checkbox"]').on('change', loadProducts);

            // ------------------------------
            // Event thêm sản phẩm vào giỏ hàng
            // ------------------------------
            $(document).on('click', '.btn-add-to-cart', function () {
                const productId = $(this).data('id');
                const token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: '@Url.Action("Add", "Cart", new { area = "User" })',
                    type: 'POST',
                    data: {id: productId, __RequestVerificationToken: token},
                    success: function (response) {
                        if (response.success) {
                            showToast(response.message, "success");
                            if (response.cartCount !== undefined) $("#cartCount").text(response.cartCount);
                        } else {
                            showToast(response.message, "danger");
                        }
                    },
                    error: function () {
                        showToast("❌ Có lỗi xảy ra!", "danger");
                    }
                });
            });

            // ------------------------------
            // Event nút so sánh
            // ------------------------------
            function openCompareModal() {
                const selectedIds = Array.from(document.querySelectorAll(".compare-checkbox:checked"))
                    .map(cb => cb.value);

                if (selectedIds.length < 2) {
                    alert("Vui lòng chọn ít nhất 2 sản phẩm để so sánh.");
                    return;
                } else if (selectedIds.length > 3) {
                    alert("Vui lòng chọn tối đa 3 sản phẩm để so sánh.");
                    return;
                }

                fetch('@Url.Action("ComparePartial", "Product", new { area = "User" })?productIds=' + selectedIds.join("&productIds="))
                    .then(res => res.text())
                    .then(html => {
                        $('#compareTableContainer').html(html);

                        const compareModalEl = document.getElementById('compareModal');
                        const compareModal = new bootstrap.Modal(compareModalEl, {
                            backdrop: false,
                            keyboard: true
                        });
                        compareModal.show();
                    })
                    .catch(err => {
                        console.error(err);
                        alert("Có lỗi xảy ra, vui lòng thử lại.");
                    });
            }

            $(document).on("click", "#compareBtn", function (e) {
                e.preventDefault();
                openCompareModal();
            });

        });
    </script>

}

