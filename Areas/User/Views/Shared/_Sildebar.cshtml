@using MyWebApp.ViewModels

@if (Model is ProductFilterViewModel filterModel)
{
    <aside class = "col-lg-3 mb-4">
        <form id = "filterForm">
            <div class = "card mb-4 shadow-sm">
                <div class = "card-header bg-primary text-white">
                    <i class = "fas fa-list"></i> Danh mục
                </div>
                <div class = "card-body">
                    @await Component.InvokeAsync("Category", new { selectedSlugCategories = filterModel.SelectedSlugCategories })
                </div>
            </div>

            <div class = "card mb-4 shadow-sm">
                <div class = "card-header bg-success text-white">
                    <i class = "fas fa-tags"></i> Thương hiệu
                </div>
                <div class = "card-body">
                    @await Component.InvokeAsync("Brand", new { selectedSlugBrands = filterModel.SelectedSlugBrands })
                </div>
            </div>

            <div class="mt-3">
                <label>Giá (₫):</label>
                <div class="d-flex gap-2 align-items-center">
                    <input type="number" id="minPriceInput" name="minPrice" class="form-control" placeholder="Giá thấp nhất" value="@Model.MinPrice" />
                    <input type="number" id="maxPriceInput" name="maxPrice" class="form-control" placeholder="Giá cao nhất" value="@Model.MaxPrice" />
                </div>
                <p>Khoảng giá: <span id="priceRange">@Model.MinPrice - @Model.MaxPrice</span> ₫</p>
            </div>
        </form>
    </aside>
}
<script>
    const minInput = document.getElementById('minPriceInput');
    const maxInput = document.getElementById('maxPriceInput');
    const priceRange = document.getElementById('priceRange');

    function filterProducts() {
        let form = $('#filterForm');
        let url = '@Url.Action("FilterPartial", "Product", new { area = "User" })';

        $.ajax({
            url: url,
            type: 'GET',
            data: form.serialize(),
            success: function (html) {
                $('#product-list-container').html(html);
            },
            error: function () {
                showToast("⚠️ Lọc sản phẩm thất bại!", "danger");
            }
        });
    }

    function updatePriceRange() {
        let min = parseInt(minInput.value) || 0;
        let max = parseInt(maxInput.value) || 0;

        if(min > max) [min, max] = [max, min]; // hoán đổi nếu nhập nhầm
        priceRange.innerText = min.toLocaleString() + " - " + max.toLocaleString();

        filterProducts();
    }

    // Gọi khi thay đổi giá
    minInput.addEventListener('input', updatePriceRange);
    maxInput.addEventListener('input', updatePriceRange);

    // Checkbox vẫn gọi filterProducts
    $('#filterForm input[type="checkbox"]').on('change', filterProducts);
</script>

