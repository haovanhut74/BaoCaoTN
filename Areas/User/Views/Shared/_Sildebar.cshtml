@using MyWebApp.ViewModels

<link rel="stylesheet" href="~/css/User/ProductFillter.css" />
@if (Model is ProductFilterViewModel filterModel)
{
    <form id="filterForm" class="mb-4">
        <div class="d-flex flex-wrap align-items-center gap-4 p-3 bg-light rounded shadow-sm">

            <!-- Danh mục -->
            <div class="filter-item d-flex align-items-center">
                <label class="fw-bold me-2"><i class="fas fa-list"></i> Danh mục:</label>
                @await Component.InvokeAsync("Category", new { selectedSlugCategories = filterModel.SelectedSlugCategories })
            </div>

            <!-- Thương hiệu -->
            <div class="filter-item d-flex align-items-center">
                <label class="fw-bold me-2"><i class="fas fa-tags"></i> Thương hiệu:</label>
                @await Component.InvokeAsync("Brand", new { selectedSlugBrands = filterModel.SelectedSlugBrands })
            </div>

            <!-- Giá -->
            <div class="filter-item d-flex align-items-center">
                <label class="fw-bold me-2"><i class="fas fa-dollar-sign"></i> Giá:</label>
                <input type="number" id="minPriceInput" name="minPrice"
                       class="form-control form-control-sm w-auto" placeholder="Từ" value="@Model.MinPrice" />
                <span class="mx-1">-</span>
                <input type="number" id="maxPriceInput" name="maxPrice"
                       class="form-control form-control-sm w-auto" placeholder="Đến" value="@Model.MaxPrice" />
            </div>

            <!-- Hiển thị khoảng giá -->
            <div class="text-muted">
                Khoảng: <span id="priceRange">@Model.MinPrice - @Model.MaxPrice</span> ₫
            </div>
        </div>
    </form>

}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const minInput = document.getElementById('minPriceInput');
        const maxInput = document.getElementById('maxPriceInput');
        const priceRange = document.getElementById('priceRange');

        function filterProducts() {
            let form = $('#filterForm'); // vẫn dùng jQuery
            let url = '@Url.Action("FilterPartial", "Product", new { area = "User" })';

            $.ajax({
                url: url,
                type: 'GET',
                data: form.serialize(),
                success: function (html) {
                    $('#product-list-container').html(html);
                },
                error: function () {
                    showToast("⚠️ Lọc sản phẩm thất bại!", "danger");
                }
            });
        }

        function updatePriceRange() {
            let min = parseInt(minInput.value) || 0;
            let max = parseInt(maxInput.value) || 0;

            if(min > max) [min, max] = [max, min]; // hoán đổi nếu nhập nhầm
            priceRange.innerText = min.toLocaleString() + " - " + max.toLocaleString();

            filterProducts();
        }

        minInput.addEventListener('input', updatePriceRange);
        maxInput.addEventListener('input', updatePriceRange);

        $('#filterForm input[type="checkbox"]').on('change', filterProducts);
    });

</script>

